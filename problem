OK===E  二分位置======================== www.lintcode.com/problem/classical-binary-search ======================================= Binary Search  
OK   E  二分位置                         www.lintcode.com/problem/first-position-of-target 最后是先检查nums[start] 
OK   E  二分位置                         www.lintcode.com/problem/search-insert-position  最后有三个位置^start^end^ 
OK   E  二分位置                         www.lintcode.com/problem/last-position-of-target  注意最后是先检查nums[end]是否等于target
OK   M  二分位置                         www.lintcode.com/problem/search-in-a-big-sorted-array 先找一个上界 
OK   E  二分位置                         www.lintcode.com/problem/search-a-2d-matrix 一个二维数组中是否存在某个数, 转化成1维做 
OK   M  二分位置                         www.lintcode.com/problem/search-a-2d-matrix-ii  
OK   M  二分位置                         www.lintcode.com/problem/find-minimum-in-rotated-sorted-array 最小值一定在无序的一边, 最后从剩下的两个值里挑最小的 
OK   M  二分位置                         www.lintcode.com/problem/find-minimum-in-rotated-sorted-array-ii  
OK   M  二分位置                         www.lintcode.com/problem/search-in-rotated-sorted-array  
OK   M  二分位置                         www.lintcode.com/problem/search-in-rotated-sorted-array-ii
OK   M  二分位置                         www.lintcode.com/problem/search-for-a-range 寻找target的开始和结束位置
OK   E  二分位置                         www.lintcode.com/problem/total-occurrence-of-target 寻找大于target的最小值所在的位置, 注意判断返回的是数组两边的位置  
OK   E  二分位置                         www.lintcode.com/problem/closest-number-in-sorted-array 找到大于target的最小元素  
OK * M  二分位置  两个指针               www.lintcode.com/problem/k-closest-numbers-in-sorted-array 先找到大于target的最小元素, 然后找这个元素周围最近的k个  
OK   M  二分答案                         www.lintcode.com/problem/first-bad-version 最后返回两个先看start 
OK   E  二分答案                         www.lintcode.com/problem/sqrtx  
OK   M  二分答案                         www.lintcode.com/problem/wood-cut 先确定一个木头长度的上界, 根据是否满足最少获得的木头个数, 然后二分的方法缩小, 最后先检查end是否满足
OK   M  保留有解的一半                   www.lintcode.com/problem/find-peak-element mid如果比左边相邻的小则mid左边有peak, mid如果比右边相邻的小则mid右边有peak 
O    M                                   www.lintcode.com/problem/maximum-number-in-mountain-sequence contest
O    M                                   www.lintcode.com/problem/divide-two-integers
OK===E  DFS遍历 递归+非递归============= www.lintcode.com/problem/binary-tree-preorder-traversal 需栈,根先入栈,然后while循环栈顶出栈加入结果,按照先右后左的顺序放入栈====Binary Tree & Divide Conquer  
OK   M  DFS遍历 递归+非递归              www.lintcode.com/problem/binary-tree-inorder-traversal 需要栈, 最外while循环, 内层先while循环左子树遍历入栈, 栈若空返回结果, 否则栈顶出栈加入结果, 检查右子树  
OK   E  DFS遍历 递归+非递归              www.lintcode.com/problem/binary-tree-postorder-traversal 类似先序, 需要两个栈, 栈顶元素出栈后加入另一个栈, 先左后右, 最后栈2出栈到结果集  
OK   H  DFS遍历 中序遍历 记忆            www.lintcode.com/problem/binary-search-tree-iterator 类似中序遍历, hasNext看curt和栈是否为空, next()是中序的while循环内部  
OK   M  DFS遍历 中序思想 记忆            www.lintcode.com/problem/inorder-successor-in-binary-search-tree 先找到node, 如果node右儿子是空, 则node的parent就是前继, 否则是右儿子的最左叶子是前继  
OK   M  DFS遍历 中序剪枝遍历 改非递归    www.lintcode.com/problem/search-range-in-binary-search-tree 中序遍历, 提前结束; 非递归类似Traversal的中序遍历, 带上剪枝  
OK   E  DFS遍历 非递归                   www.lintcode.com/problem/insert-node-in-a-binary-search-tree 递归的很容易理解; 根据当前root和target比较决定向左右哪个儿子前进, 知道遇到某儿子是空时  
OK * H  DFS遍历 3中情况                  www.lintcode.com/problem/remove-node-in-binary-search-tree 先找到要删除的节点的parent, 以及这个节点, 然后根据儿子的数量分3中情况来删除  
OK   E  DFS遍历 路径和是target的所有路径 www.lintcode.com/problem/binary-tree-path-sum 递归  
OK   E  DFS遍历 两棵树                   www.lintcode.com/problem/tweaked-identical-binary-tree 三个递归退出条件, 两种递归拆解情况  
OK   E  DFS遍历 两棵树                   www.lintcode.com/problem/identical-binary-tree 三个递归退出条件, 1个递归拆解情况  
OK   E  DFS遍历 一棵树                   www.lintcode.com/problem/symmetric-binary-tree 先拆左右树, 三个递归退出条件, 1个递归拆解情况  
OK * M  递归 和 非递归                   www.lintcode.com/problem/complete-binary-tree hulu
OK   M  DFS遍历                          www.lintcode.com/problem/construct-binary-tree-from-preorder-and-inorder-traversal hulu 
OK   M  DFS遍历                          www.lintcode.com/problem/construct-binary-tree-from-inorder-and-postorder-traversal hulu 
OK   E  DivideConquer                    www.lintcode.com/problem/maximum-depth-of-binary-tree 递归;   
OK * E  DivideConquer                    www.lintcode.com/problem/minimum-depth-of-binary-tree 一定要达到leaf: root空;1个儿子空;2个儿子为空;2个儿子不为空  
OK   E  DivideConquer                    www.lintcode.com/problem/balanced-binary-tree 递归定义: 返回当前root的高度, -1是不平衡 
OK   M  DivideConquer                    www.lintcode.com/problem/lowest-common-ancestor 递归定义: 返回以当前root为根, 两个node的祖先, 根据左右子树拆解, 结束条件是遇到一个节点就返回; 思考三种情况
OK   E  先得到Path,然后沿着Path找        www.lintcode.com/problem/lowest-common-ancestor-ii  
OK   M  DivideConquer                    www.lintcode.com/problem/binary-tree-maximum-path-sum-ii 从根出发的最大路径, 不一定到叶子  
OK * M  DivideConquer maxPath一定包含值  www.lintcode.com/problem/binary-tree-maximum-path-sum 递归定义:返回root的Result(singlePath, maxPath), maxPath是树内anytoany, singlePath是从根开始  
OK   M  DivideConquer                    www.lintcode.com/problem/validate-binary-search-tree 递归定义:返回root的Result(is_bst, min, max), 根据左右子树进行拆解, 先观察子树, 再结合root的值  
OK   M  BFS遍历 1队列,root入队,进入while www.lintcode.com/problem/binary-tree-level-order-traversal 根据当前队列长度for循环, 把队列元素出队, 把元素子树放入队列, 完成一次for循环加入一次结果集  
OK   M  BFS遍历 从下向上                 www.lintcode.com/problem/binary-tree-level-order-traversal-ii Collections.reverse()  
OK   M  BFS遍历 两个stack版本            www.lintcode.com/problem/binary-tree-zigzag-level-order-traversal normalOrder决定当前层顺序  
OK   M  BFS遍历 deserial时用一个queue    www.lintcode.com/problem/binary-tree-serialization index指出当前处理那个node,当处理完左右时index增,ser:先把所有节点按层序入queue, 去掉最后的null, 按顺序输出.  
O    E                                   www.lintcode.com/problem/sort-integers-ii
O    M                                   www.lintcode.com/problem/expression-expand
OK===E  坐标型 ========================= www.lintcode.com/problem/unique-paths-ii ======================================= Dynamic Program  
OK   E  坐标型                           www.lintcode.com/problem/unique-paths 从矩形左上角走到右下角的方案数  
OK   E  坐标型                           www.lintcode.com/problem/climbing-stairs 从1层到顶层的爬楼梯方法  
OK   E  坐标型                           www.lintcode.com/problem/minimum-path-sum 从矩形左上角到右下角的最小路径长度  
OK   E  坐标型     滚动数组              www.lintcode.com/problem/triangle 从根到叶子的最小路径长度  
OK   M  坐标型     贪心                  www.lintcode.com/problem/jump-game-ii 从起点到达终点的最小跳数  
OK   M  坐标型     贪心                  www.lintcode.com/problem/jump-game 从起点能否到达终点  
OK   M  坐标型                           www.lintcode.com/problem/longest-increasing-subsequence 最长的递增子序列长度  
OK   M  单-序列型                        www.lintcode.com/problem/house-robber 在一个条状小区内最大的偷盗价值  
OK   M  单-序列型  拆环                  www.lintcode.com/problem/house-robber-ii 在一个环状小区内最大的偷盗价值  
OK   M  单-序列型                        www.lintcode.com/problem/word-break 字符串能否用字典分割
OK   M  单-序列型                        www.lintcode.com/problem/palindrome-partitioning-ii 得到最少的回文串需要切几刀  
OK   M  单-序列型                        www.lintcode.com/problem/decode-ways 解码方案数 chatAt(x)  
OK   M  双序列型                         www.lintcode.com/problem/edit-distance 最少的编辑次数  
OK   M  双序列型                         www.lintcode.com/problem/distinct-subsequences 不同的子序列个数  
OK   M  双序列型                         www.lintcode.com/problem/interleaving-string 字符串A和字符串B能否交替的组成字符串C  
OK   M  双序列型                         www.lintcode.com/problem/longest-common-substring 字符串A和字符串B的最长连续公共子串  
OK   M  双序列型                         www.lintcode.com/problem/longest-common-subsequence 字符串A和字符串B的最长公共子序列  
OK   H  双序列型                         www.lintcode.com/problem/wildcard-matching 字符串S是否能被带*?的字符串P匹配上  
OK   E  记忆化搜索 引子题                www.lintcode.com/problem/longest-increasing-continuous-subsequence  数组的LICS长度  
OK * H  记忆化搜索                       www.lintcode.com/problem/longest-increasing-continuous-subsequence-ii 矩形的LICS  
OK   M  记忆化搜索                       www.lintcode.com/problem/coins-in-a-line 选手可以拿1个或两个硬币, 拿到最后的算赢, 先手能否赢  
OK   M  记忆化搜索                       www.lintcode.com/problem/coins-in-a-line-ii 一个人可以拿1个或两个硬币, 每个硬币价值不同, 拿到价值多的赢, 先手能否赢  
OK   H  记忆化搜索                       www.lintcode.com/problem/coins-in-a-line-iii 可以从头或者尾拿1个硬币, 每个硬币价值不同, 拿到价值多的赢, 先手能否赢 TODO 非递归版  
OK   M  记忆化搜索 区间DP                www.lintcode.com/problem/stone-game   
OK   H  记忆化搜索                       www.lintcode.com/problem/scramble-string s.toCharArray()  
OK   H  记忆化搜索 区间DP                www.lintcode.com/problem/burst-balloons  
OK   M  背包                             www.lintcode.com/problem/backpack 背包容量是m, 每个物品体积不同, 最大放多少体积, i从1到n, j从1到target  
OK   M  背包                             www.lintcode.com/problem/backpack-ii 背包容量是m, 每个物品价值不同, 最大放多少价值  
OK   H  背包                             www.lintcode.com/problem/backpack-iii 背包容量是m, 每个物品价值不同, 物品可以重复放, 最大放多少价值  
OK   M  背包                             www.lintcode.com/problem/backpack-iv 背包容量是m, 每个物品体积不同, 物品可以重复, 放满背包的方案数, f[0][0]=1 j要从0开始到target  
OK   M  背包                             www.lintcode.com/problem/backpack-v 背包容量是m, 每个物品体积不同, 放满背包的方案数, f[0][0]=1 j要从0开始到target  
OK   M  背包                             www.lintcode.com/problem/backpack-vi 背包容量是m, 每个物品体积不同, 放满背包的组合方案数, 1维状态 f[i] += f[i - nums[j]]  
OK * H  背包                             www.lintcode.com/problem/k-sum 第i个数取还是不取 f[i][j][t] = f[i-1][j][t] or f[i-1][j][t] + f[i-1][j-1][t-A[i-1]]  
OK * M  背包 给一个数组和一个target      www.lintcode.com/problem/minimum-adjustment-cost f[i][j]表示前i个数, 第i个数调整成j, 所需要的最小代价.计算f[i][j]时,3重循环,最内层要枚举第i-1个数时的各种情况  
OK * H  背包                             www.lintcode.com/problem/copy-books f[i][j]表示前i本书分配给j个人的最小cost, 三重循环, 最内层枚举新加进来的人处理多少本书  
OK * H  背包                             www.lintcode.com/problem/copy-books-ii f[i][j]表示前i个人分配给前j本书的最小cost, 三重循环, 最内层枚举新加进来的人处理多少本书  
OK   M  经典题                           www.lintcode.com/problem/maximal-square 想要RA优化空间, 随着for循环初始化首行和首列  
OK   M  区间型                           www.lintcode.com/problem/longest-palindromic-substring  
O    H                                   www.lintcode.com/problem/post-office-problem  
OK   E                                   www.lintcode.com/problem/drop-eggs
OK   M                                   www.lintcode.com/problem/drop-eggs-ii
OK   M  数学归纳法                       www.leetcode.com/problems/count-numbers-with-unique-digits
O    E                                   www.lintcode.com/problem/count-and-say
O    H  两个状态的坐标DP                 www.leetcode.com/problems/frog-jump
OK===M  使用dummy 如果head.next的值和=== www.lintcode.com/problem/remove-duplicates-from-sorted-list-ii head.next.next的值相等, 那么记录这个值, 循环删除所有等于这个值的node========== LinkedList  
OK   E  用HashSet记录访问过的node, dummy www.lintcode.com/problem/remove-duplicates-from-unsorted-list 用了dummy的, while都是判断head.next不为空  
OK   E                                   www.lintcode.com/problem/remove-duplicates-from-sorted-list node指向head,如果node.next不为空,那么判断下node的值和node.next的值是否相等,相等就删掉node.next  
OK   E  基本操作:reverse  preNode        www.lintcode.com/problem/reverse-linked-list 用preNode  
OK   M  画图, dummy                      www.lintcode.com/problem/reverse-linked-list-ii  
OK   E  基本操作:partition               www.lintcode.com/problem/partition-list 用两个dummy指针和两个移动指针  
OK   E  基本操作:remove                  www.lintcode.com/problem/remove-linked-list-elements dummy指针  
OK   E  基本操作:merge                   www.lintcode.com/problem/merge-two-sorted-lists dummy是个空指针, 开始lastNode指向dummy, 随着merge移动lastNode  
OK   E  基本操作:middle                  www.lintcode.com/problem/middle-of-linked-list slow + fast  
OK * M  middle,partition,merge           www.lintcode.com/problem/sort-list MergeSort:findMiddle->sort_right+sort_left->merge; QuickSort:findMiddle->partition(L/M/R)->sort_left+sort_right->concat  
OK   M  reverse,merge,middle             www.lintcode.com/problem/reorder-list findMiddle->reverse(mid.next)->merge  
OK   M  前向型指针 快慢类                www.lintcode.com/problem/linked-list-cycle  
OK   H  前向型指针 快慢类                www.lintcode.com/problem/linked-list-cycle-ii slow fast先移动相遇后再移动head和slow, while(head != slow.next) 最后返回head就是环出现的地方  
OK   E  前向型指针 快慢类                www.lintcode.com/problem/remove-nth-node-from-end-of-list dummy, preDelete  
OK * M                                   www.lintcode.com/problem/merge-k-sorted-lists hulu
OK   M  HashMap; No extra space          www.lintcode.com/problem/copy-list-with-random-pointer 先copyNext -> 再copyRandom -> 最后Split  
OK   E  删除中间的一个节点               www.lintcode.com/problem/delete-node-in-the-middle-of-singly-linked-list  
OK * M  先得到长度, 然后先递归得到左子树 www.lintcode.com/problem/convert-sorted-list-to-balanced-bst 然后再构造根, 移动current, 递归构造右子树, 组合左右子树, 最后返回根  
OK   M  helper(root)返回当前BST树的      www.lintcode.com/problem/convert-binary-search-tree-to-doubly-linked-list 最小值的node和最大值的node, 递归的得到左右子树的result, 利用它门构造当前根的result  
OK   H  每次reverseK, 每次先看是否够长   www.lintcode.com/problem/reverse-nodes-in-k-group 确定n1, prev, cur的位置, 然后进行k-1次的翻转操作, 最后做首尾的调整, 画图很重要  
O    E                                   www.lintcode.com/problem/swap-nodes-in-pairs  
O    E                                   www.lintcode.com/problem/insertion-sort-list  
O    E                                   www.lintcode.com/problem/add-two-numbers  
O    M                                   www.lintcode.com/problem/add-two-numbers-ii  
O    E                                   www.lintcode.com/problem/nth-to-last-node-in-list  
O    M                                   www.lintcode.com/problem/swap-two-nodes-in-linked-list  
O    M                                   www.lintcode.com/problem/palindrome-linked-list  
OK===E  ================================ www.lintcode.com/problem/intersection-of-two-arrays ============================ Array&Numbers  
OK   E                                   www.lintcode.com/problem/merge-two-sorted-arrays  
OK   E                                   www.lintcode.com/problem/merge-sorted-array 把B合并进A, 从后向前合并即可 
OK   H                                   www.lintcode.com/problem/median-of-two-sorted-arrays 转化成找有序数列中的第k个数, log(m+n)的复杂度
OK   M                                   www.lintcode.com/problem/best-time-to-buy-and-sell-stock hulu
OK   M                                   www.lintcode.com/problem/best-time-to-buy-and-sell-stock-ii  
OK   M                                   www.lintcode.com/problem/best-time-to-buy-and-sell-stock-iii hulu DP
OK   H                                   www.lintcode.com/problem/best-time-to-buy-and-sell-stock-iv  DP
OK   M                                   www.leetcode.com/problems/best-time-to-buy-and-sell-stock-with-cooldown DP
OK * M  前向型指针 窗口类                www.lintcode.com/problem/minimum-size-subarray-sum 求最短的连续子数组的和>=target TwoPointer
OK   E                                   www.lintcode.com/problem/subarray-sum         找个子数组和是0
OK   H                                   www.lintcode.com/problem/subarray-sum-ii      用prefix sum方法, 找个子数组, 和在一个范围内
OK   M                                   www.lintcode.com/problem/subarray-sum-closest 找个子数组, 和最接近0
OK   M                                   www.lintcode.com/problem/submatrix-sum        找个子矩阵, 和是0
OK   E                                   www.lintcode.com/problem/minimum-subarray
OK   E  单-序列型/greedy/PrefixSum       www.lintcode.com/problem/maximum-subarray 连续数组的最大和 DP
OK   M  PrefixSum                        www.lintcode.com/problem/maximum-subarray-difference
OK   M                                   www.lintcode.com/problem/maximum-subarray-ii
OK   H                                   www.lintcode.com/problem/maximum-subarray-iii
OK   M  单-序列型                        www.lintcode.com/problem/maximum-product-subarray 连续数组的最大积 DP
OK   M                                   www.lintcode.com/problem/continuous-subarray-sum
OK   M                                   www.lintcode.com/problem/continuous-subarray-sum-ii
OK===E  ================================ www.lintcode.com/problem/hash-function ========================================= Data Structure  
OK   M                                   www.lintcode.com/problem/top-k-largest-numbers
OK   M                                   www.lintcode.com/problem/top-k-largest-numbers-ii
OK   M                                   www.lintcode.com/problem/top-k-frequent-words
OK   M                                   www.lintcode.com/problem/merge-k-sorted-arrays
OK   M                                   www.lintcode.com/problem/rehashing
OK   M                                   www.lintcode.com/problem/implement-queue-by-two-stacks
OK   M                                   www.lintcode.com/problem/min-stack
O    M                                   www.lintcode.com/problem/ugly-number-ii
O    M                                   www.leetcode.com/problems/super-ugly-number
OK   H                                   www.lintcode.com/problem/lru-cache hulu microsoft amazon
O    H                                   www.lintcode.com/problem/lfu-cache
O    H                                   www.lintcode.com/problem/largest-rectangle-in-histogram
O    E                                   www.lintcode.com/problem/implement-stack
O    E                                   www.lintcode.com/problem/implement-stack-by-two-queues
O    E                                   www.lintcode.com/problem/implement-queue-by-linked-list-ii
O    E                                   www.lintcode.com/problem/implement-queue-by-linked-list
O    M                                   www.lintcode.com/problem/stack-sorting
O    M                                   www.lintcode.com/problem/heapify
O    M                                   www.lintcode.com/problem/longest-consecutive-sequence
O    H                                   www.lintcode.com/problem/animal-shelter
OK   H                                   www.lintcode.com/problem/max-tree 构造最大堆笛卡尔树
OK   H                                   www.lintcode.com/problem/expression-tree-build
OK   H                                   www.lintcode.com/problem/expression-evaluation 两个栈的方法比较好; 先构造min tree, 然后后续遍历得到逆波兰表达式, 然后在计算逆波兰表达式
OK   H                                   www.lintcode.com/problem/convert-expression-to-reverse-polish-notation
OK   H                                   www.lintcode.com/problem/convert-expression-to-polish-notation
O    M                                   www.lintcode.com/problem/implement-three-stacks-by-single-array
OK   E  UF                               www.lintcode.com/problem/number-of-islands microsoft
OK   H  UF                               www.lintcode.com/problem/number-of-islands-ii microsoft
OK   M  UF                               www.lintcode.com/problem/graph-valid-tree
O    M  UF                               www.lintcode.com/problem/find-the-weak-connected-component-in-the-directed-graph
O    M  UF                               www.lintcode.com/problem/find-the-connected-component-in-the-undirected-graph 还可以有BFS做法, 用hashset记录访问过的节点, 然后用bfs遍历每一个node
O    M  UF                               www.lintcode.com/problem/surrounded-regions
O    M  SweepLine                        www.lintcode.com/problem/number-of-airplanes-in-the-sky
O    M  Trie                             www.lintcode.com/problem/add-and-search-word
O    M                                   www.lintcode.com/problem/word-search microsoft
O    H  Trie                             www.lintcode.com/problem/word-search-ii microsoft
O    M  SegmentTree                      www.lintcode.com/problem/segment-tree-query-ii
O    H                                   www.lintcode.com/problem/kth-smallest-sum-in-two-sorted-arrays contest
O    H  SegmentTree                      www.lintcode.com/problem/count-of-smaller-number-before-itself
O    H  SegmentTree                      www.lintcode.com/problem/interval-sum-ii
O    H                                   www.lintcode.com/problem/trapping-rain-water-ii
O    H                                   www.lintcode.com/problem/sliding-window-median
O    H                                   www.lintcode.com/problem/data-stream-median
O    S                                   www.lintcode.com/problem/building-outline
O    S                                   www.lintcode.com/problem/sliding-window-maximum
O    H                                   www.lintcode.com/problem/maximal-rectangle
OK===M BackTracking ==================== www.lintcode.com/problem/subsets =========================================== Graph & Search & BackTracking 
OK   M BackTracking                      www.lintcode.com/problem/subsets-ii 注意拆解递归时是helper(nums, path, i + 1, results) 而不是 pos + 1 
OK   M BackTracking                      www.lintcode.com/problem/permutations  
OK   M BackTracking                      www.lintcode.com/problem/permutations-ii 递归拆解是从0到nums.length-1
OK   M BackTracking                      www.lintcode.com/problem/palindrome-partitioning 是dfs, subset类型的
OK   H BackTracking                      www.lintcode.com/problem/word-ladder-ii amazon linkedin yelp
OK   H BackTracking                      www.lintcode.com/problem/word-break-ii contest 跟permutation很像, 利用word-break来避免搜索不肯能的
O    M BackTracking                      www.lintcode.com/problem/k-sum-ii  
OK   M BackTracking                      langford-pairing
OK   M BackTracking                      www.lintcode.com/problem/combination-sum 跟subsets很像, 不要忘记排序, 不要忘记增加path到结果集时clone path
OK   M BackTracking                      www.lintcode.com/problem/combination-sum-ii 跟combination-sum 只有一个区别:递归拆解时i+1
OK   M BackTracking                      www.lintcode.com/problem/letter-combinations-of-a-phone-number StringBuilder.append() StrinbBuilder.deleteCharAt()
OK   M BFS 图                            www.leetcode.com/problems/evaluate-division
OK   M DFS                               battleships-in-a-board
OK   M                                   www.lintcode.com/problem/clone-graph  
OK   M                                   www.lintcode.com/problem/word-ladder  
OK   M                                   www.lintcode.com/problem/six-degrees bfs遍历, 用hashmap记录从s到遍历到的点的距离 
OK   M                                   www.lintcode.com/problem/topological-sorting 先求出所有点的入度, 把入度是0的加入queue和结果集, 然后bfs遍历queue, 随着遍历减少遍历到的点的入度
OK   M                                   www.lintcode.com/problem/n-queens 用了StringBuilder, 要调用toString()才能变成str 
OK   M                                   www.lintcode.com/problem/n-queens-ii  
O    M                                   www.lintcode.com/problem/string-permutation-ii  
OK   M                                   www.leetcode.com/problems/android-unlock-patterns
OK===M 对撞型指针 2-sum类 =============  www.lintcode.com/problem/container-with-most-water ==================================== Two Pointers  
OK   M 对撞型指针 2-sum类                www.lintcode.com/problem/trapping-rain-water  
OK   M 对撞型指针 2-sum类                www.lintcode.com/problem/two-sum  
OK   M                                   www.lintcode.com/problem/two-sum-ii  
O    M                                   www.lintcode.com/problem/two-sum-closest  
OK   M 对撞型指针 2-sum类                www.lintcode.com/problem/3sum-closest 固定一个数, 然后左右缩减范围  
OK   M 对撞型指针 2-sum类                www.lintcode.com/problem/3sum 也是固定一个数, 但注意当遇到相同值时, bypass它  
OK   M                                   www.leetcode.com/problems/3sum-smaller
OK   M 对撞型指针 2-sum类                www.lintcode.com/problem/4sum  
OK   H 对撞型指针 2-sum类                www.lintcode.com/problem/triangle-count  
OK   M 对撞型指针 partition类            www.lintcode.com/problem/nuts-bolts-problem   
OK * M 对撞型指针 partition类            www.lintcode.com/problem/kth-largest-element  
OK   E 对撞型指针 partition类            www.lintcode.com/problem/valid-palindrome front>=end; Character.isDigit(), Character.isLetter()  
OK   E 对撞型指针 partition类            www.lintcode.com/problem/partition-array-by-odd-and-even 一遍直接翻转  
OK   M 对撞型指针 partition类            www.lintcode.com/problem/sort-letters-by-case 一遍直接翻转, Character.isUpperCase(), Character.isLowerCase()  
OK * M 对撞型指针 partition类            www.lintcode.com/problem/partition-array 一遍直接翻转 感觉所有此类题跟另外一种partition都可以用一种partition的模板搞定  
OK   M 对撞型指针 partition类            www.lintcode.com/problem/sort-colors 画图 Left Cur Right  
OK   M 对撞型指针 partition类            www.lintcode.com/problem/interleaving-positive-and-negative-numbers  
OK   M 前向型指针 窗口类                 www.lintcode.com/problem/minimum-window-substring 求在Source中最短的包含了Target所有字符的子串  
OK * M 前向型指针 窗口类                 www.lintcode.com/problem/longest-substring-without-repeating-characters  
OK * M 前向型指针 窗口类                 www.lintcode.com/problem/longest-substring-with-at-most-k-distinct-characters  
OK   M 两个数组两个指针                  www.lintcode.com/problem/the-smallest-difference 求两个数组A和B中任意两个元素的最小差值  
OK   H                                   www.lintcode.com/problem/sliding-window-matrix-maximum 先求出sum[i][j]表示[i][j]位置的矩形和, 再利用sum数组遍历求k矩形最大值  
OK   E 两层for搞定,注意for的范围         www.lintcode.com/problem/strstr ======================================================= Mics
O    E                                   www.lintcode.com/problem/climbing-stairs-ii 
O    E                                   www.lintcode.com/problem/kth-largest-in-n-arrays  
O    M                                   www.lintcode.com/problem/segment-tree-build  
O    M                                   www.lintcode.com/problem/segment-tree-build-ii  
O    M                                   www.lintcode.com/problem/segment-tree-modify  
O    M                                   www.lintcode.com/problem/segment-tree-query  
O    M                                   www.lintcode.com/problem/interval-minimum-number  
O    M                                   www.lintcode.com/problem/lowest-common-ancestor-iii  
O    M                                   www.lintcode.com/problem/find-the-missing-number-ii  
O    M                                   www.lintcode.com/problem/number-of-ways-to-represent-n-cents  
O    M                                   www.lintcode.com/problem/kth-smallest-number-in-sorted-matrix  
O    H                                   www.lintcode.com/problem/find-peak-element-ii  
O    H                                   www.lintcode.com/problem/maximum-gap  
O    E                                   www.lintcode.com/problem/build-post-office  
O    M                                   www.lintcode.com/problem/build-post-office-ii  
O    E                                   www.lintcode.com/problem/nested-list-weight-sum  
O    M                                   www.lintcode.com/problem/bomb-enemy  
O    M                                   www.lintcode.com/problem/zigzag-iterator  
O    M                                   www.lintcode.com/problem/zigzag-iterator-ii  
OK   M 字符串操作                        www.lintcode.com/problem/roman-to-integer 
OK   M Greedy                            www.lintcode.com/problem/gas-station
OK   M                                   www.leetcode.com/problems/product-of-array-except-self
OK   M 模拟题                            www.leetcode.com/problems/design-snake-game 
OK   M 使用stack记录当前层的最大路径长   www.leetcode.com/problems/longest-absolute-file-path
OK   M                                   www.leetcode.com/problems/sentence-screen-fitting 把sentence重复拼接
OK   M                                   www.leetcode.com/problems/binary-tree-longest-consecutive-sequence 求tree上的最长连续序列(3-4-5这样的才叫consecutive, 而且本体要求是升序的)
OK   M                                   www.leetcode.com/problems/missing-ranges
OK   E                                   www.leetcode.com/problems/add-strings 利用carry记录进位, 从num1和num2的最低位开始相加, 逐个append到StringBuilder中
OK   E                                   www.leetcode.com/problems/binary-tree-paths
OK   E                                   www.leetcode.com/problems/binary-watch 使用Integer.bitCount(i)来看i对应的二进制有多少个1, 然后用String.format("%d:%02d", i, j)来打印
OK   E                                   www.leetcode.com/problems/closest-binary-search-tree-value
     E                                   www.leetcode.com/problems/find-all-numbers-disappeared-in-an-array
     E                                   www.leetcode.com/problems/find-the-difference
     E                                   www.leetcode.com/problems/flip-game
     E                                   www.leetcode.com/problems/group-shifted-strings
     E                                   www.leetcode.com/problems/guess-number-higher-or-lower
     E                                   www.leetcode.com/problems/logger-rate-limiter
O    E                                   www.leetcode.com/problems/longest-palindrome
     E                                   www.leetcode.com/problems/nth-digit
     E                                   www.leetcode.com/problems/number-of-boomerangs
     E                                   www.leetcode.com/problems/paint-fence
     E                                   www.leetcode.com/problems/palindrome-permutation
O    E                                   www.leetcode.com/problems/plus-one
     E                                   www.leetcode.com/problems/power-of-three
     E                                   www.leetcode.com/problems/power-of-two
     E                                   www.leetcode.com/problems/repeated-substring-pattern
O    E                                   www.leetcode.com/problems/reverse-vowels-of-a-string
     E                                   www.leetcode.com/problems/strobogrammatic-number
     E                                   www.leetcode.com/problems/unique-word-abbreviation
O    E                                   www.leetcode.com/problems/valid-parentheses
O    E                                   www.leetcode.com/problems/valid-word-abbreviation
     E                                   www.leetcode.com/problems/valid-word-square
O    M                                   www.leetcode.com/problems/binary-tree-vertical-order-traversal google microsoft
     M                                   www.leetcode.com/problems/combination-sum-iv
     M                                   www.leetcode.com/problems/decode-string
     M                                   www.leetcode.com/problems/design-hit-counter
     M                                   www.leetcode.com/problems/design-phone-directory
     M                                   www.leetcode.com/problems/design-tic-tac-toe
     M                                   www.leetcode.com/problems/encode-and-decode-strings
     M                                   www.leetcode.com/problems/find-k-pairs-with-smallest-sums
     M                                   www.leetcode.com/problems/flatten-2d-vector
     M                                   www.leetcode.com/problems/flatten-nested-list-iterator
O    M                                   www.leetcode.com/problems/flip-game-ii
     M                                   www.leetcode.com/problems/fraction-to-recurring-decimal
     M                                   www.leetcode.com/problems/generalized-abbreviation
O    M                                   www.leetcode.com/problems/generate-parentheses
     M                                   www.leetcode.com/problems/guess-number-higher-or-lower-ii
     M                                   www.leetcode.com/problems/h-index
     M                                   www.leetcode.com/problems/implement-trie-prefix-tree
     M                                   www.leetcode.com/problems/integer-replacement
     M                                   www.leetcode.com/problems/kth-smallest-element-in-a-bst
O    M                                   www.leetcode.com/problems/largest-divisible-subset
O    M                                   www.leetcode.com/problems/line-reflection
     M                                   www.leetcode.com/problems/linked-list-random-node
     M                                   www.leetcode.com/problems/maximum-product-of-word-lengths
     M                                   www.leetcode.com/problems/maximum-xor-of-two-numbers-in-an-array
O    M                                   www.leetcode.com/problems/meeting-rooms-ii
     M                                   www.leetcode.com/problems/minimum-height-trees
O    M                                   www.leetcode.com/problems/next-permutation
     M                                   www.leetcode.com/problems/number-of-connected-components-in-an-undirected-graph
     M                                   www.leetcode.com/problems/pacific-atlantic-water-flow
     M                                   www.leetcode.com/problems/peeking-iterator
O    M                                   www.leetcode.com/problems/perfect-squares
     M                                   www.leetcode.com/problems/plus-one-linked-list
O    M                                   www.leetcode.com/problems/powx-n
     M                                   www.leetcode.com/problems/queue-reconstruction-by-height
     M                                   www.leetcode.com/problems/range-addition
O    M                                   www.leetcode.com/problems/reconstruct-itinerary
     M                                   www.leetcode.com/problems/remove-k-digits
     M                                   www.leetcode.com/problems/sequence-reconstruction
     M                                   www.leetcode.com/problems/sort-characters-by-frequency
     M                                   www.leetcode.com/problems/sort-transformed-array
O    M                                   www.leetcode.com/problems/spiral-matrix
     M                                   www.leetcode.com/problems/strobogrammatic-number-ii
     M                                   www.leetcode.com/problems/summary-ranges
     M                                   www.leetcode.com/problems/utf-8-validation
O    M                                   www.leetcode.com/problems/verify-preorder-serialization-of-a-binary-tree
     M                                   www.leetcode.com/problems/walls-and-gates
O    M                                   www.leetcode.com/problems/wiggle-sort-ii
O    M                                   www.leetcode.com/problems/wiggle-sort
O    H                                   www.leetcode.com/problems/alien-dictionary
     H                                   www.leetcode.com/problems/basic-calculator
     H                                   www.leetcode.com/problems/closest-binary-search-tree-value-ii
     H                                   www.leetcode.com/problems/count-of-range-sum
     H                                   www.leetcode.com/problems/count-of-smaller-numbers-after-self
O    H                                   www.leetcode.com/problems/create-maximum-number
     H                                   www.leetcode.com/problems/expression-add-operators
     H                                   www.leetcode.com/problems/find-median-from-data-stream
     H                                   www.leetcode.com/problems/insert-delete-getrandom-o1
O    H                                   www.leetcode.com/problems/insert-interval
     H                                   www.leetcode.com/problems/longest-increasing-path-in-a-matrix
     H                                   www.leetcode.com/problems/longest-substring-with-at-most-two-distinct-characters
     H                                   www.leetcode.com/problems/max-sum-of-sub-matrix-no-larger-than-k
O    H                                   www.leetcode.com/problems/merge-intervals
     H                                   www.leetcode.com/problems/minimum-unique-word-abbreviation
     H                                   www.leetcode.com/problems/palindrome-pairs
     H                                   www.leetcode.com/problems/patching-array
     H                                   www.leetcode.com/problems/perfect-rectangle
     H                                   www.leetcode.com/problems/read-n-characters-given-read4-ii-call-multiple-times
     H                                   www.leetcode.com/problems/rearrange-string-k-distance-apart
O    H                                   www.leetcode.com/problems/regular-expression-matching/ google microsoft
     H                                   www.leetcode.com/problems/remove-duplicate-letters
     H                                   www.leetcode.com/problems/russian-doll-envelopes
     H                                   www.leetcode.com/problems/shortest-distance-from-all-buildings
O    H                                   www.leetcode.com/problems/shortest-palindrome
     H                                   www.leetcode.com/problems/smallest-rectangle-enclosing-black-pixels
     H                                   www.leetcode.com/problems/the-skyline-problem
O    H                                   www.leetcode.com/problems/word-search-ii
     H                                   www.leetcode.com/problems/word-squares
     M 拓扑排序                          www.leetcode.com/problems/course-schedule google
     M                                   www.leetcode.com/problems/game-of-life google
OK   M 一遍for循环是最好解,回溯是暴力    www.leetcode.com/problems/permutation-sequence google
     M                                   www.lintcode.com/problem/kth-smallest-numbers-in-unsorted-array contest
     M                                   www.lintcode.com/problem/sqrtx-ii contest
     M                                   www.lintcode.com/problem/longest-repeating-subsequence contest
OK   M                                   www.leetcode.com/problems/simplify-path hulu microsoft facebook stack string
O    M                                   company-structure hulu
OK   M                                   ads-fatigue hulu
OK   M                                   delete_number hulu
OK   M                                   www.leetcode.com/problems/populating-next-right-pointers-in-each-node hulu microsoft
OK   H                                   www.leetcode.com/problems/populating-next-right-pointers-in-each-node-ii hulu facebook microsoft
O    M                                   snake-ladder-problem-2 graph-bfs
OK   E                                   greatest-common-divisor microsoft
